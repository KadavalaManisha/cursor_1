document.addEventListener(\'DOMContentLoaded\', () => {\n    const form = document.getElementById(\'myForm\');\n    const nameInput = document.getElementById(\'name\');\n    const emailInput = document.getElementById(\'email\');\n    const passwordInput = document.getElementById(\'password\');\n\n    const nameError = document.getElementById(\'nameError\');\n    const emailError = document.getElementById(\'emailError\');\n    const passwordError = document.getElementById(\'passwordError\');\n\n    // Simple email validation regex\n    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;\n\n    form.addEventListener(\'submit\', (event) => {\n        let isValid = true;\n\n        // Reset errors\n        resetError(nameInput, nameError);\n        resetError(emailInput, emailError);\n        resetError(passwordInput, passwordError);\n\n        // Validate Name (Required)\n        if (nameInput.value.trim() === \'\') {\n            showError(nameInput, nameError, \'Name is required.\');\n            isValid = false;\n        }\n\n        // Validate Email (Required and Format)\n        const emailValue = emailInput.value.trim();\n        if (emailValue === \'\') {\n            showError(emailInput, emailError, \'Email is required.\');\n            isValid = false;\n        } else if (!emailRegex.test(emailValue)) {\n            showError(emailInput, emailError, \'Please enter a valid email address.\');\n            isValid = false;\n        }\n\n        // Validate Password (Required)\n        if (passwordInput.value.trim() === \'\') {\n            showError(passwordInput, passwordError, \'Password is required.\');\n            isValid = false;\n        }\n\n        // Prevent form submission if invalid\n        if (!isValid) {\n            event.preventDefault();\n        } else {\n            // Optional: Form is valid, you can submit it or perform other actions\n            console.log(\'Form submitted successfully!\');\n            // If you were submitting via AJAX, you would do it here\n            // For standard form submission, removing event.preventDefault() or not calling it\n            // when valid would allow the form to submit normally.\n            // Since we prevented default at the start, we might need to explicitly submit:\n            // form.submit(); // Or handle via AJAX\n            event.preventDefault(); // Keep this if handling submission with JS (e.g., AJAX)\n            alert(\'Form is valid and would be submitted!\');\n        }\n    });\n\n    function showError(inputElement, errorElement, message) {\n        inputElement.classList.add(\'error\');\n        errorElement.textContent = message;\n        errorElement.style.display = \'block\';\n    }\n\n    function resetError(inputElement, errorElement) {\n        inputElement.classList.remove(\'error\');\n        errorElement.style.display = \'none\';\n        errorElement.textContent = \'\'; // Clear previous message\n    }\n}); 